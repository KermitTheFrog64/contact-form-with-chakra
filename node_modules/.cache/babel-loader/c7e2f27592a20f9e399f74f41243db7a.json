{"ast":null,"code":"var _jsxFileName = \"/home/natalie/ReactProjects/06/contact-form-with-chakra/src/components/ContactForm.jsx\";\nimport { Formik, Form, ErrorMessage } from \"formik\";\nimport { Box, Button, Flex, FormControl, Input, VStack, Textarea, Text, FormErrorMessage } from \"@chakra-ui/react\";\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ContactForm() {\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    h: \"568px\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      p: 6,\n      rounded: \"md\",\n      w: \"320px\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Contact Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontWeight: \"500\",\n        fontSize: \"16px\",\n        lineHeight: \"19px\",\n        color: \"#6C6D6F\",\n        w: \"288px\",\n        h: \"57px\",\n        mt: \"24px\",\n        mb: \"24px\",\n        children: [\"If you have any questions please \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 54\n        }, this), \"don't hesitate to contact us. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 91\n        }, this), \"We're here to help!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: \"\",\n          message: \"\"\n        },\n        onSubmit: async values => {\n          await new Promise(r => setTimeout(r, 500));\n          alert(JSON.stringify(values, null, 2));\n        },\n        children: _ref => {\n          let {\n            errors,\n            touched\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(VStack, {\n              spacing: 4,\n              align: \"flex-start\",\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                isInvalid: !!errors.email && touched.email,\n                children: [/*#__PURE__*/_jsxDEV(Input, {\n                  bg: \"white\",\n                  w: \"288px\",\n                  h: \"59px\",\n                  id: \"email\",\n                  name: \"email\",\n                  type: \"email\",\n                  placeholder: \"Your email\",\n                  validate: value => {\n                    let error;\n\n                    if (value.length === 0) {\n                      error = \"Email is required\";\n                    }\n\n                    return error;\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n                  children: errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 34\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                isInvalid: !!errors.email && touched.email,\n                children: [/*#__PURE__*/_jsxDEV(Textarea, {\n                  bg: \"white\",\n                  w: \"288px\",\n                  h: \"115px\",\n                  as: Input,\n                  id: \"message\",\n                  name: \"message\",\n                  type: \"message\",\n                  placeholder: \"Your message\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"message\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                bg: \"#4DBA7A\",\n                color: \"white\",\n                w: \"70px\",\n                h: \"37px\",\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_c = ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["Formik","Form","ErrorMessage","Box","Button","Flex","FormControl","Input","VStack","Textarea","Text","FormErrorMessage","Yup","ContactForm","email","message","values","Promise","r","setTimeout","alert","JSON","stringify","errors","touched","value","error","length","password"],"sources":["/home/natalie/ReactProjects/06/contact-form-with-chakra/src/components/ContactForm.jsx"],"sourcesContent":["import { Formik, Form, ErrorMessage } from \"formik\";\nimport {\n    Box,\n    Button,\n    Flex,\n    FormControl,\n    Input,\n    VStack,\n    Textarea,\n    Text,\n    FormErrorMessage\n} from \"@chakra-ui/react\";\nimport * as Yup from 'yup';\n\nexport default function ContactForm() {\n    return (\n        <Flex align=\"center\" justify=\"center\" h=\"568px\">\n            <Box p={6} rounded=\"md\" w=\"320px\">\n                <h1>Contact Us</h1>\n                <Text\n                    fontWeight='500'\n                    fontSize='16px'\n                    lineHeight='19px'\n                    color='#6C6D6F'\n                    w=\"288px\"\n                    h=\"57px\"\n                    mt=\"24px\"\n                    mb=\"24px\">\n                    If you have any questions please < br />don't hesitate to contact us. < br />\n                    We're here to help!\n                </Text>\n                <Formik\n\n                    initialValues={{\n                        email: \"\",\n                        message: \"\"\n                    }}\n\n                    onSubmit={async (values) => {\n                        await new Promise((r) => setTimeout(r, 500));\n                        alert(JSON.stringify(values, null, 2));\n                    }}\n                >\n                    {({ errors, touched }) => (\n                    \n                    <form>\n\n                        <VStack spacing={4} align=\"flex-start\">\n\n                            <FormControl isInvalid={!!errors.email && touched.email}>\n                                <Input\n                                    bg=\"white\"\n                                    w=\"288px\"\n                                    h=\"59px\"\n                                    id=\"email\"\n                                    name=\"email\"\n                                    type=\"email\"\n                                    placeholder=\"Your email\"\n                                    validate={(value) => {\n                                        let error;\n                  \n                                        if (value.length === 0) {\n                                          error = \"Email is required\";\n                                        }\n                  \n                                        return error;\n                                      }}\n                                />\n                                 <FormErrorMessage>{errors.password}</FormErrorMessage>\n                            </FormControl>\n\n                            <FormControl isInvalid={!!errors.email && touched.email}>\n                                <Textarea\n                                    bg=\"white\"\n                                    w=\"288px\"\n                                    h=\"115px\"\n                                    as={Input}\n                                    id=\"message\"\n                                    name=\"message\"\n                                    type=\"message\"\n                                    placeholder=\"Your message\"\n                                />\n                                <ErrorMessage name=\"message\" />\n                            </FormControl>\n\n                            <Button\n                                type=\"submit\"\n                                bg=\"#4DBA7A\"\n                                color=\"white\"\n                                w=\"70px\"\n                                h=\"37px\" >\n                                Send\n                            </Button>\n                        </VStack>\n                    </form>)}\n\n                </Formik>\n            </Box>\n        </Flex>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}