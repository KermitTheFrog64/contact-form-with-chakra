{"ast":null,"code":"var _jsxFileName = \"/home/natalie/ReactProjects/06/contact-form-with-chakra/src/components/ContactForm.jsx\";\nimport { Formik, Field } from \"formik\";\nimport { Box, Button, Flex, FormControl, FormErrorMessage, Input, VStack, Textarea, Text } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ContactForm() {\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    bg: \"gray.100\",\n    align: \"center\",\n    justify: \"center\",\n    h: \"100vh\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contact Us\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: \"If you have any questions please don't hesitate to contact us. We're here to help!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\",\n        message: \"\"\n      },\n      onSubmit: values => {\n        alert(JSON.stringify(values, null, 2));\n      },\n      children: _ref => {\n        let {\n          handleSubmit,\n          errors,\n          touched\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(VStack, {\n            spacing: 4,\n            align: \"flex-start\",\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                as: Input,\n                id: \"email\",\n                name: \"email\",\n                type: \"email\",\n                placeholder: \"Your email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              isInvalid: !!errors.message && touched.message,\n              children: [/*#__PURE__*/_jsxDEV(Textarea, {\n                as: Input,\n                id: \"message\",\n                name: \"message\",\n                type: \"message\",\n                placeholder: \"Your message\",\n                validate: value => {\n                  let error;\n\n                  if (value.length < 5) {\n                    error = \"Password must contain at least 6 characters\";\n                  }\n\n                  return error;\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n                children: errors.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              colorScheme: \"purple\",\n              width: \"full\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["Formik","Field","Box","Button","Flex","FormControl","FormErrorMessage","Input","VStack","Textarea","Text","ContactForm","email","message","values","alert","JSON","stringify","handleSubmit","errors","touched","value","error","length"],"sources":["/home/natalie/ReactProjects/06/contact-form-with-chakra/src/components/ContactForm.jsx"],"sourcesContent":["import { Formik, Field } from \"formik\";\nimport {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormErrorMessage,\n  Input,\n  VStack,\n  Textarea,\n  Text\n} from \"@chakra-ui/react\";\n\nexport default function ContactForm() {\n  return (\n    <Flex bg=\"gray.100\" align=\"center\" justify=\"center\" h=\"100vh\">\n      <h1>Contact Us</h1>\n      <Text>\n        If you have any questions please don't hesitate to contact us. We're here to help!\n      </Text>\n        <Formik\n\n          initialValues={{\n            email: \"\",\n            message: \"\"\n          }}\n\n          onSubmit={(values) => {\n            alert(JSON.stringify(values, null, 2));\n          }}\n        >\n          {({ handleSubmit, errors, touched }) => (\n            <form onSubmit={handleSubmit}>\n              <VStack spacing={4} align=\"flex-start\">\n\n                <FormControl>\n                  <Field\n                    as={Input}\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Your email\"\n                  />\n                </FormControl>\n\n                <FormControl isInvalid={!!errors.message && touched.message}>\n                  <Textarea\n                    as={Input}\n                    id=\"message\"\n                    name=\"message\"\n                    type=\"message\"\n                    placeholder=\"Your message\"\n                    validate={(value) => {\n                      let error;\n\n                      if (value.length < 5) {\n                        error = \"Password must contain at least 6 characters\";\n                      }\n\n                      return error;\n                    }}\n                  />\n                  \n                  <FormErrorMessage>{errors.message}</FormErrorMessage>\n                </FormControl>\n\n                <Button type=\"submit\" colorScheme=\"purple\" width=\"full\">\n                  Send\n                </Button>\n              </VStack>\n            </form>\n          )}\n        </Formik>\n    </Flex>\n  );\n}"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,KAAjB,QAA8B,QAA9B;AACA,SACEC,GADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,WAJF,EAKEC,gBALF,EAMEC,KANF,EAOEC,MAPF,EAQEC,QARF,EASEC,IATF,QAUO,kBAVP;;AAYA,eAAe,SAASC,WAAT,GAAuB;EACpC,oBACE,QAAC,IAAD;IAAM,EAAE,EAAC,UAAT;IAAoB,KAAK,EAAC,QAA1B;IAAmC,OAAO,EAAC,QAA3C;IAAoD,CAAC,EAAC,OAAtD;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,IAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAKI,QAAC,MAAD;MAEE,aAAa,EAAE;QACbC,KAAK,EAAE,EADM;QAEbC,OAAO,EAAE;MAFI,CAFjB;MAOE,QAAQ,EAAGC,MAAD,IAAY;QACpBC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;MACD,CATH;MAAA,UAWG;QAAA,IAAC;UAAEI,YAAF;UAAgBC,MAAhB;UAAwBC;QAAxB,CAAD;QAAA,oBACC;UAAM,QAAQ,EAAEF,YAAhB;UAAA,uBACE,QAAC,MAAD;YAAQ,OAAO,EAAE,CAAjB;YAAoB,KAAK,EAAC,YAA1B;YAAA,wBAEE,QAAC,WAAD;cAAA,uBACE,QAAC,KAAD;gBACE,EAAE,EAAEX,KADN;gBAEE,EAAE,EAAC,OAFL;gBAGE,IAAI,EAAC,OAHP;gBAIE,IAAI,EAAC,OAJP;gBAKE,WAAW,EAAC;cALd;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QAFF,eAYE,QAAC,WAAD;cAAa,SAAS,EAAE,CAAC,CAACY,MAAM,CAACN,OAAT,IAAoBO,OAAO,CAACP,OAApD;cAAA,wBACE,QAAC,QAAD;gBACE,EAAE,EAAEN,KADN;gBAEE,EAAE,EAAC,SAFL;gBAGE,IAAI,EAAC,SAHP;gBAIE,IAAI,EAAC,SAJP;gBAKE,WAAW,EAAC,cALd;gBAME,QAAQ,EAAGc,KAAD,IAAW;kBACnB,IAAIC,KAAJ;;kBAEA,IAAID,KAAK,CAACE,MAAN,GAAe,CAAnB,EAAsB;oBACpBD,KAAK,GAAG,6CAAR;kBACD;;kBAED,OAAOA,KAAP;gBACD;cAdH;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAkBE,QAAC,gBAAD;gBAAA,UAAmBH,MAAM,CAACN;cAA1B;gBAAA;gBAAA;gBAAA;cAAA,QAlBF;YAAA;cAAA;cAAA;cAAA;YAAA,QAZF,eAiCE,QAAC,MAAD;cAAQ,IAAI,EAAC,QAAb;cAAsB,WAAW,EAAC,QAAlC;cAA2C,KAAK,EAAC,MAAjD;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAjCF;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADD;MAAA;IAXH;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA6DD;KA9DuBF,W"},"metadata":{},"sourceType":"module"}