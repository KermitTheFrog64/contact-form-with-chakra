{"ast":null,"code":"var _jsxFileName = \"/home/natalie/ReactProjects/06/contact-form-with-chakra/src/components/ContactForm.jsx\";\nimport { Formik, Field } from \"formik\";\nimport { Box, Button, Checkbox, Flex, FormControl, FormLabel, FormErrorMessage, Input, VStack } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ContactForm() {\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    bg: \"gray.100\",\n    align: \"center\",\n    justify: \"center\",\n    h: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      bg: \"white\",\n      p: 6,\n      rounded: \"md\",\n      w: 64,\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: \"\",\n          message: \"\"\n        },\n        onSubmit: values => {\n          alert(JSON.stringify(values, null, 2));\n        },\n        children: _ref => {\n          let {\n            handleSubmit,\n            errors,\n            touched\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(VStack, {\n              spacing: 4,\n              align: \"flex-start\",\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                children: /*#__PURE__*/_jsxDEV(Field, {\n                  as: Input,\n                  id: \"email\",\n                  name: \"email\",\n                  type: \"email\",\n                  placeholder: \"Your email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                isInvalid: !!errors.message && touched.message,\n                children: [/*#__PURE__*/_jsxDEV(Field, {\n                  as: textarea,\n                  id: \"password\",\n                  name: \"password\",\n                  type: \"password\",\n                  placeholder: \"Your message\",\n                  validate: value => {\n                    let error;\n\n                    if (value.length < 5) {\n                      error = \"Password must contain at least 6 characters\";\n                    }\n\n                    return error;\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n                  children: errors.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                colorScheme: \"purple\",\n                width: \"full\",\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["Formik","Field","Box","Button","Checkbox","Flex","FormControl","FormLabel","FormErrorMessage","Input","VStack","ContactForm","email","message","values","alert","JSON","stringify","handleSubmit","errors","touched","textarea","value","error","length"],"sources":["/home/natalie/ReactProjects/06/contact-form-with-chakra/src/components/ContactForm.jsx"],"sourcesContent":["import { Formik, Field } from \"formik\";\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Flex,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Input,\n  VStack\n} from \"@chakra-ui/react\";\n\nexport default function ContactForm() {\n  return (\n    <Flex bg=\"gray.100\" align=\"center\" justify=\"center\" h=\"100vh\">\n      <Box bg=\"white\" p={6} rounded=\"md\" w={64}>\n        <Formik\n\n          initialValues={{\n            email: \"\",\n            message: \"\"\n          }}\n\n          onSubmit={(values) => {\n            alert(JSON.stringify(values, null, 2));\n          }}\n        >\n          {({ handleSubmit, errors, touched }) => (\n            <form onSubmit={handleSubmit}>\n              <VStack spacing={4} align=\"flex-start\">\n\n                <FormControl>\n                  <Field\n                    as={Input}\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Your email\"\n                  />\n                </FormControl>\n\n                <FormControl isInvalid={!!errors.message && touched.message}>\n                  <Field\n                    as={textarea}\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Your message\"\n                    validate={(value) => {\n                      let error;\n\n                      if (value.length < 5) {\n                        error = \"Password must contain at least 6 characters\";\n                      }\n\n                      return error;\n                    }}\n                  />\n                  \n                  <FormErrorMessage>{errors.message}</FormErrorMessage>\n                </FormControl>\n\n                <Button type=\"submit\" colorScheme=\"purple\" width=\"full\">\n                  Send\n                </Button>\n              </VStack>\n            </form>\n          )}\n        </Formik>\n      </Box>\n    </Flex>\n  );\n}"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,KAAjB,QAA8B,QAA9B;AACA,SACEC,GADF,EAEEC,MAFF,EAGEC,QAHF,EAIEC,IAJF,EAKEC,WALF,EAMEC,SANF,EAOEC,gBAPF,EAQEC,KARF,EASEC,MATF,QAUO,kBAVP;;AAYA,eAAe,SAASC,WAAT,GAAuB;EACpC,oBACE,QAAC,IAAD;IAAM,EAAE,EAAC,UAAT;IAAoB,KAAK,EAAC,QAA1B;IAAmC,OAAO,EAAC,QAA3C;IAAoD,CAAC,EAAC,OAAtD;IAAA,uBACE,QAAC,GAAD;MAAK,EAAE,EAAC,OAAR;MAAgB,CAAC,EAAE,CAAnB;MAAsB,OAAO,EAAC,IAA9B;MAAmC,CAAC,EAAE,EAAtC;MAAA,uBACE,QAAC,MAAD;QAEE,aAAa,EAAE;UACbC,KAAK,EAAE,EADM;UAEbC,OAAO,EAAE;QAFI,CAFjB;QAOE,QAAQ,EAAGC,MAAD,IAAY;UACpBC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;QACD,CATH;QAAA,UAWG;UAAA,IAAC;YAAEI,YAAF;YAAgBC,MAAhB;YAAwBC;UAAxB,CAAD;UAAA,oBACC;YAAM,QAAQ,EAAEF,YAAhB;YAAA,uBACE,QAAC,MAAD;cAAQ,OAAO,EAAE,CAAjB;cAAoB,KAAK,EAAC,YAA1B;cAAA,wBAEE,QAAC,WAAD;gBAAA,uBACE,QAAC,KAAD;kBACE,EAAE,EAAET,KADN;kBAEE,EAAE,EAAC,OAFL;kBAGE,IAAI,EAAC,OAHP;kBAIE,IAAI,EAAC,OAJP;kBAKE,WAAW,EAAC;gBALd;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA,QAFF,eAYE,QAAC,WAAD;gBAAa,SAAS,EAAE,CAAC,CAACU,MAAM,CAACN,OAAT,IAAoBO,OAAO,CAACP,OAApD;gBAAA,wBACE,QAAC,KAAD;kBACE,EAAE,EAAEQ,QADN;kBAEE,EAAE,EAAC,UAFL;kBAGE,IAAI,EAAC,UAHP;kBAIE,IAAI,EAAC,UAJP;kBAKE,WAAW,EAAC,cALd;kBAME,QAAQ,EAAGC,KAAD,IAAW;oBACnB,IAAIC,KAAJ;;oBAEA,IAAID,KAAK,CAACE,MAAN,GAAe,CAAnB,EAAsB;sBACpBD,KAAK,GAAG,6CAAR;oBACD;;oBAED,OAAOA,KAAP;kBACD;gBAdH;kBAAA;kBAAA;kBAAA;gBAAA,QADF,eAkBE,QAAC,gBAAD;kBAAA,UAAmBJ,MAAM,CAACN;gBAA1B;kBAAA;kBAAA;kBAAA;gBAAA,QAlBF;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAZF,eAiCE,QAAC,MAAD;gBAAQ,IAAI,EAAC,QAAb;gBAAsB,WAAW,EAAC,QAAlC;gBAA2C,KAAK,EAAC,MAAjD;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAjCF;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADD;QAAA;MAXH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA2DD;KA5DuBF,W"},"metadata":{},"sourceType":"module"}